@page "/"


<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h2">Blogentry Creator</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.h5">Vorschau:</MudText>
        <MudPaper>
            <MudText Typo="Typo.h4">@_content.Title</MudText>
            @foreach (var part in _content.ContentParts)
            {
                if (part.Type == Lib.Enums.ContentType.MarkDownText)
                {
                    <Entry>@((MarkupString)Markdown.ToHtml(part.Content))</Entry>
                }
                else
                {
                    <Entry>
                        @part.Content
                    </Entry>
                }
            }
        </MudPaper>
        <MudForm>
            <MudTextField Label="Title" T="string" @bind-Value="_content.Title" Required="true" />
            @foreach (var part in _content.ContentParts)
            {
                <MudPaper>
                    <MudMenu Icon="@Icons.Material.Filled.Build">
                        @foreach (ContentType item in Enum.GetValues(typeof(ContentType)))
                        {
                            <MudMenuItem OnClick="(e)=>part.Type = item">@item.ToString()</MudMenuItem>
                        }
                    </MudMenu>
                    <MudTextField Label="Content" T="string" @bind-Value="part.Content" Required="true" Lines="@part.Lines" @onkeydown="(e)=>AddLine(e,part)" Immediate="true" />
                </MudPaper>
            }
            <MudIconButton Icon="@Icons.Filled.Add" OnClick="AddPart"></MudIconButton>

        </MudForm>
    </MudCardContent>
    <MudCardActions>
        <Download Filename="@($"{_content.Id}.json")" ToDownload="@_content" />
        <MudButton OnClick="GenerateContentlist">Generate ContentList</MudButton>
        @if (_generated)
        {
            <Download Filename="@($"ContentList.json")" ToDownload="@_indexEntryModel" />
        }
    </MudCardActions>
</MudCard>

@code {
    ContentModel _content = new();
    IndexEntryModel _indexEntryModel;
    bool _generated = false;


    void GenerateContentlist()
    {
        _indexEntryModel = new(_content);
        _generated = true;
    }
    void AddLine(KeyboardEventArgs e, ContentPart part)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            part.Lines++;
        }

    }
    void AddPart()
    {
        List<ContentPart> tempParts = new(_content.ContentParts.Length + 1);
        tempParts.AddRange(_content.ContentParts);
        ContentPart part = new();
        part.Lines = 2;
        tempParts.Add(part);
        _content.ContentParts = tempParts.ToArray();
    }
}
